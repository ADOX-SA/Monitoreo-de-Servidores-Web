
volumes:  # Define volúmenes que pueden ser utilizados por los servicios.
  grafana-data:  # Crea un volumen llamado grafana-data para almacenar datos persistentes de Grafana.
  prometheus-data:  # Crea un volumen llamado prometheus-data para almacenar datos persistentes de Prometheus.

services:  # Sección donde se definen los servicios que se ejecutarán en contenedores.
  grafana:  # Define el servicio Grafana.
    image: grafana/grafana:8.0.6  # Especifica la imagen de Docker a usar (versión 8.0.6 de Grafana).
    container_name: grafana  # Asigna un nombre específico al contenedor.
    restart: unless-stopped  # Reinicia el contenedor automáticamente a menos que se detenga manualmente.
    volumes:  # Especifica los volúmenes a montar en el contenedor.
      - grafana-data:/var/lib/grafana  # Monta el volumen grafana-data en /var/lib/grafana dentro del contenedor.
    ports:  # Mapea puertos del contenedor a puertos del host.
      - 3000:3000  # Expone el puerto 3000 del contenedor en el puerto 3000 del host.

  prometheus:  # Define el servicio Prometheus.
    image: prom/prometheus:v2.28.1  # Especifica la imagen de Docker a usar (versión 2.28.1 de Prometheus).
    container_name: prometheus  # Asigna un nombre específico al contenedor.
    restart: unless-stopped  # Reinicia el contenedor automáticamente a menos que se detenga manualmente.
    volumes:  # Especifica los volúmenes a montar en el contenedor.
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # Monta el archivo prometheus.yml desde la carpeta prometheus en el host en /etc/prometheus/prometheus.yml dentro del contenedor.
      - prometheus-data:/prometheus  # Monta el volumen prometheus-data en /prometheus dentro del contenedor.
    ports:  # Mapea puertos del contenedor a puertos del host.
      - 9090:9090  # Expone el puerto 9090 del contenedor en el puerto 9090 del host.
    command:  # Especifica comandos a ejecutar cuando se inicia el contenedor.
      - '--config.file=/etc/prometheus/prometheus.yml'  # Indica el archivo de configuración a usar.
      - '--storage.tsdb.path=/prometheus'  # Establece la ruta para almacenar los datos de la base de datos.
      - '--storage.tsdb.retention.time=1y'  # Establece el tiempo de retención de los datos a 1 año.
      - '--web.enable-lifecycle'  # Habilita el soporte para la API de ciclo de vida.

  node_exporter:  # Define el servicio Node Exporter, que recopila métricas del sistema.
    image: quay.io/prometheus/node-exporter:latest  # Especifica la imagen de Docker a usar (última versión de Node Exporter).
    container_name: node_exporter  # Asigna un nombre específico al contenedor.
    restart: unless-stopped  # Reinicia el contenedor automáticamente a menos que se detenga manualmente.
    ports:  # Mapea puertos del contenedor a puertos del host.
      - 9100:9100  # Expone el puerto 9100 del contenedor en el puerto 9100 del host.
    ###### linux
    # command:  # (Comandos opcionales para Linux)
    # - '--path.rootfs=/host'  # Especifica la raíz del sistema de archivos.
    # pid: host  # (Configuración de PID opcional para Linux)
    # volumes:  # (Volúmenes opcionales para Linux)
    # - '/:/host:ro,rslave'  # Monta el sistema de archivos del host en modo solo lectura.
    ###### windows
    volumes:  # Especifica los volúmenes a montar en el contenedor para Windows.
      - /proc:/host/proc:ro  # Monta el directorio /proc del host en /host/proc dentro del contenedor en modo solo lectura.
      - /sys:/host/sys:ro  # Monta el directorio /sys del host en /host/sys dentro del contenedor en modo solo lectura.
    command:  # Especifica comandos a ejecutar cuando se inicia el contenedor.
      - '--path.procfs=/host/proc'  # Establece la ruta para el sistema de archivos proc.
      - '--path.sysfs=/host/sys'  # Establece la ruta para el sistema de archivos sys.
      - --collector.filesystem.ignored-mount-points  # Opciones para el recolector de archivos.
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"  # Expresión regular para ignorar puntos de montaje específicos.

  cadvisor:  # Define el servicio cAdvisor, que recopila métricas de contenedores Docker.
    image: gcr.io/cadvisor/cadvisor:latest  # Especifica la imagen de Docker a usar (última versión de cAdvisor).
    container_name: cadvisor  # Asigna un nombre específico al contenedor.
    restart: unless-stopped  # Reinicia el contenedor automáticamente a menos que se detenga manualmente.
    ports:  # Expone un puerto del contenedor para uso interno en la red de Docker.
      - 8080  # Expone el puerto 8080 para ser accesible a otros contenedores.
    volumes:  # Especifica los volúmenes a montar en el contenedor.
      - /:/rootfs:ro  # Monta el sistema de archivos del host en /rootfs dentro del contenedor en modo solo lectura.
      - /var/run:/var/run:rw  # Monta el directorio /var/run del host en modo lectura y escritura dentro del contenedor.
      - /sys:/sys:ro  # Monta el directorio /sys del host en modo solo lectura dentro del contenedor.
      - /var/lib/docker/:/var/lib/docker:ro  # Monta el directorio de datos de Docker en modo solo lectura dentro del contenedor.

  app_example:  # Define un servicio de ejemplo que utiliza una aplicación de Prometheus.
    image: quay.io/brancz/prometheus-example-app:v0.3.0  # Especifica la imagen de Docker a usar (versión 0.3.0 de la aplicación de ejemplo).
    container_name: app_example  # Asigna un nombre específico al contenedor.
    restart: unless-stopped  # Reinicia el contenedor automáticamente a menos que se detenga manualmente.
    ports:  # Mapea puertos del contenedor a puertos del host.
      - 80:8080  # Expone el puerto 8080 del contenedor en el puerto 80 del host.

  app_examplev2:  # Define un servicio de ejemplo que utiliza una aplicación de Prometheus.
    image: quay.io/brancz/prometheus-example-app:v0.3.0  # Especifica la imagen de Docker a usar (versión 0.3.0 de la aplicación de ejemplo).
    container_name: app_examplev2  # Asigna un nombre específico al contenedor.
    restart: unless-stopped  # Reinicia el contenedor automáticamente a menos que se detenga manualmente.
    ports:  # Mapea puertos del contenedor a puertos del host.
      - 90:8070  # Expone el puerto 8080 del contenedor en el puerto 80 del host.
